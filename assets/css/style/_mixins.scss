@mixin flexbox($jc:false, $ai:false, $fd:false, $fw:false, $fg:false) {
    display: flex; /* Définit l'affichage en mode Flexbox pour l'élément auquel le mixin est appliqué */

    @if $jc { /* Vérifie si la variable $jc a une valeur (n'est pas false) */
        justify-content: $jc; /* Applique la valeur de $jc à la propriété justify-content pour aligner les éléments horizontalement */
    }

    @if $ai { /* Vérifie si la variable $ai a une valeur (n'est pas false) */
        align-items: $ai; /* Applique la valeur de $ai à la propriété align-items pour aligner les éléments verticalement */
    }

    @if $fd { /* Vérifie si la variable $fd a une valeur (n'est pas false) */
        flex-direction: $fd; /* Applique la valeur de $fd à la propriété flex-direction pour définir l'orientation des éléments flexibles */
    }

    @if $fw { /* Vérifie si la variable $fw a une valeur (n'est pas false) */
        flex-wrap: $fw; /* Applique la valeur de $fw à la propriété flex-wrap pour contrôler si les éléments doivent être déplacés sur plusieurs lignes */
    }

    @if $fg { /* Vérifie si la variable $fg a une valeur (n'est pas false) */
        flex-grow: $fg; /* Applique la valeur de $fg à la propriété flex-grow pour définir la capacité des éléments à croître pour remplir l'espace disponible */
    }
}

@mixin text-align($alignment) { // Déclare un mixin 'text-align' qui prend une variable '$alignment'. Ce mixin permet de définir l'alignement du texte.
  @if $alignment == left or $alignment == right or $alignment == center or $alignment == justify { // Condition: Si la valeur de '$alignment' est 'left', 'right', 'center', ou 'justify', le code à l'intérieur sera exécuté.
      text-align: $alignment; // Définit la propriété CSS 'text-align' avec la valeur fournie par '$alignment'.
  } @else { // Sinon, si la valeur ne correspond à aucun des cas précédents...
      @warn "Valeur invalide pour text-align: #{$alignment}"; // Affiche un avertissement dans la console avec un message d'erreur précisant que la valeur de '$alignment' est invalide.
      
  }
}

@mixin text-decoration($decoration) { // Déclare un mixin 'text-decoration' qui prend une variable '$decoration'. Ce mixin permet de définir la décoration du texte

  @if $decoration == none or $decoration == underline or $decoration == overline or $decoration == line-through or $decoration == blink { // Condition: Si la valeur de '$decoration' est 'none', 'underline', 'overline', 'line-through', ou 'blink', le code à l'intérieur sera exécuté
      text-decoration: $decoration; // Définit la propriété CSS 'text-decoration' avec la valeur fournie par '$decoration'.
  } @else { // Sinon, si la valeur ne correspond à aucun des cas précédents...
      @warn "Valeur invalide pour text-decoration: #{$decoration}"; // Affiche un avertissement dans la console avec un message d'erreur précisant que la valeur de '$decoration' est invalide.
  }
}
